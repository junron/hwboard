<!DOCTYPE html>
<html lang="en">
<%- include("./partials/head") %>
<body style="margin-left:0px;margin-right:0px">
  <div id="app">
    <div class="view view-main">
    <link href="/styles/roboto.css" rel="stylesheet">
    <!--<link href="/styles/new.css" rel="stylesheet">-->
    <link rel="stylesheet" href = "/styles/icons.css">
      <div class="page page-current">
      <div class="toolbar tabbar toolbar-bottom-md">
    <div class="toolbar-inner">
      <a href="/" class="tab-link tab-link-active">
        <i class="icon demo-icon-1"></i>
        <span class="tabbar-label">Homework</span>
      </a>
      <a href="/channels" class="tab-link">
        <i class="icon demo-icon-2"></i>
        <span class="tabbar-label">Channels</span>
      </a>
    </div>
    </div>
      <div class="navbar">
        <div class="navbar-inner">
        <div class="item-content title">
          <div class="item-inner item-title">
            <div>Homework Board</div>
            <div class="item-footer" id="connection-status" style="font-size:16px">Connected</div>
          </div>
        </div>
          <a class="right" href="/popups/sort/"><i class="material-icons" style="color:#ffffff">&#xE164;</i></a>
        </div>
      </div>
        <div class="page-content" style="padding-top:0px" role="main">
          <div class="list" id="hwboard-homework-list" style="position:relative;top:60px">
            <%- renderer(data,sortType,sortOrder,adminChannels) -%>
          </div>
        </div>
        <!-- Floating App button
        Clicking will cause the edit homework popup to appear
        Only show for admins
        -->
      <% if (admin){ %>
      <div class="fab fab-right-bottom admin-only color-green-blue" aria-label="Add homework">
        <a id="fab-add-homework" href="/popups/add/">
        <i class="f7-icons icon material-icons">&#xe145;</i>
        </a>
      </div>
      <!-- No markdown yet
      <script src="/scripts/turndown.js"></script>-->
      <% } %>
      </div>
      </div>
    </div>
    <link rel="stylesheet" href="/framework7/css/framework7.min.css">
    <script src="/scripts/jquery.min.js"></script>
    <script src="/scripts/renderer.js"></script>
    <script src="/scripts/promise-worker.js"></script>
    <script src="/scripts/sugar-date.min.js"></script>
    <script>
      let channel = (location.hash.split("#!/channels/")[1] || "").split("/")[0]
      //Web worker for indexedDB
      //Use promise based messaging
      const worker = new PromiseWorker(new Worker("/scripts/worker.js"))
      //Load cached data before websocket connects
      //Allows for faster loading of updated data
      worker.postMessage({
        type:"get",
      }).then(data=>{
        if(channel!=""){
          //Only show homework for current channel
          data = data.filter(a=>a.channel == channel)
        }
        if(!data.length){
          //IndexedDB is empty, perhaps is first page load
          return
        }
        reRender(data)
      })
    </script>

    <script src="/scripts/socket.io.js"></script>
    <script src="/scripts/getCookie.js"></script>

    <% if(reportErrors){ %>
        <!--DoNt toUcHa my eRRor rePoTer-->
    <script src="/scripts/raven.min.js" crossorigin="anonymous"></script>
    <script src="/scripts/errorReporter.js"></script>
    <% } %>
    <script src="/scripts/websocketConnect.js"></script>
    <script>
    const timetable = <%-JSON.stringify(timetable) -%>;
    //request homework data from server
    //syntax conn.emit(<eventName>,[<data>],[<callback>])
    let channelSettings
    if(channel==""){
      channelSettings = {}
    }else{
      channelSettings = {
        channel,
        removeExpired:true
      }
    }
    //Db is init and user is authed
    conn.on("ready",()=>{
      conn.emit("dataReq",channelSettings,function(err,data){
        //Always check if error occurred
        if(err) throw err;
        //Put data into client-side database for caching
        //But only for main page
        if(channel==""){
          worker.postMessage({
            type:"set",
            data
          })
          //Add to localstorage as a fallback
          localStorage.setItem("data",JSON.stringify(data))
        }

        reRender(data)
      })
    })
    //Uncaught error that could not be handled via callback etc
    conn.on("uncaughtError",error=>{
      Framework7App.dialog.alert(error)
      throw new Error(error)
    })
    //Server pushes data, re-render
    conn.on("data",({channel,data:channelData})=>{
      //Add data to client side db
      updateChannelHomework(channel,channelData).then(newData=>{
        reRender(newData)
      })
    })
    </script>
<!-- non critical styles and scripts can be deferred-->
<script defer src="/scripts/dates.js"></script>
<script defer src="/scripts/generalForms.js"></script>

<script src="/framework7/js/framework7.min.js"></script>

<script src="/scripts/app.js"></script>
<% if (admin){ %>
<!-- non admins wont need these -->
<script src="/scripts/adminForms.js"></script>
<script src="/scripts/edit-homework-eventHandlers.js"></script>
<% } %>
<script defer src="/scripts/eventHandlers.js"></script>
<!-- defer when dialog code is moved -->
<script src="/fuse.js/dist/fuse.js"></script>
<%- include("./partials/adminDialogs.ejs",{adminChannels}) %>
<%- include("./partials/dialogs.ejs") %>
<script>
  const mainView = Framework7App.views.create('.view-main')
  $(document).on("click",".page-current a[href='/'].link",()=>{
    mainView.router.back()
  })
</script>
<script>
  if ('serviceWorker' in navigator) {
    navigator.serviceWorker.register('/sw.js', {scope: '/'}).then
    (reg=>{
      reg.update()
      console.log('Registration succeeded. Scope is ' + reg.scope)
    }).catch(function(error) {
      console.log('Registration failed with ' + error)
    })
  }
</script>
</body>
</html>