<!DOCTYPE html> 
<html lang="en">
<%- include("partials/head") %>
<link href="/styles/roboto.css" rel="stylesheet"> 
<meta name="viewport" content="width=device-width, initial-scale=1"> 
<body style="margin-left:0px;margin-right:0px"> 

  <style>
    .md #app .list .item-content {
      width: 100%;
    }
    #app .md li li:last-child .item-inner:after, .md li:last-child li .item-inner:after {
      width: 100vw;
    }
    .md #app .list ul ul {
      padding-left: 0px;
    }
    .accordion-item-content {
      padding-left:16px;
    }
    #app .list .swipeout .item-inner {
      padding-left:8px;
    }
    #app .list .swipeout.item-content {
      padding-left:0px;
    }
    .list > ul > li.item-divider {
      height: 40px;
      background: #fff;
      margin-right: 16px;
      margin-top: 12px;
      line-height: 24px;
      font-size: 20px;
      font-weight:normal;
      color: #000000de;
      letter-spacing: 0.8px;
    } 
    .accordion-item > .item-link.item-content {
      font-size:19px;
    }
    .accordion-item .list .item-content .person-name {
      font-weight: 300;
    }
    .accordion-item-content .block-title {
      margin-top:0px;
      font-size: 18px;
      color: black;
    }
    .accordion-item-content .item-footer {
      font-size: 16px;
      color: black;
    }
  </style>
  <div id="app">
    <div class="view view-main">
    <link href="/styles/roboto.css" rel="stylesheet">
    <!--<link href="/styles/new.css" rel="stylesheet">-->
    <link rel="stylesheet" href = "/styles/icons.css">
      <div class="page page-current">
          <div class="page-content block">
          <div class="list no-hairlines">
              <ul>
                  <li class="list-item">
                    <div class="item-inner">
                        <div class="item-title">Homework by subject</div>
                    </div>
                    <div class="item-content">
                      <div class="chart-container" style="position: relative; height:400px; width:400px">
                       <canvas id="homework-subject-chart" style="width:400px;height:400px"></canvas>
                      </div>
                    </div>
                  </li>
              </ul>
          </div>
        </div>
        </div>
    </div>
  </div>
  <script src="/framework7/js/framework7.min.js"></script>
  <script src="/scripts/app.js"></script>
  <script defer src="/scripts/Chart.bundle.min.js"></script>
  <script src="/scripts/socket.io.js"></script>
  <script>
    function hashCode(str) { // java String#hashCode
      var hash = 0;
      for (var i = 0; i < str.length; i++) {
        hash = str.charCodeAt(i) + ((hash << 5) - hash);
      }
      return hash;
    } 

    function intToRGB(i){
        var c = (i & 0x00FFFFFF)
            .toString(16)
            .toUpperCase();

        return "00000".substring(0, 6 - c.length) + c;
    }
    function toColor(string){
      console.log(string)
      return "#"+intToRGB(hashCode(string))
    }
    function getCookie(cname) {
      var name = cname + "=";
      var decodedCookie = decodeURIComponent(document.cookie);
      var ca = decodedCookie.split(';');
      for(var i = 0; i <ca.length; i++) {
        var c = ca[i];
        while (c.charAt(0) == ' ') {
          c = c.substring(1);
        }
        if (c.indexOf(name) == 0) {
          return c.substring(name.length, c.length);
        }
      }
      return "";
    }
  </script>
  <script src="/scripts/raven.min.js" crossorigin="anonymous"></script>
  <script>
    //DoNt toUcHa my eRRor rePoTer
    Raven.config('https://6c425ba741364b1abb9832da6dde3908@sentry.io/1199491').install()
    Raven.setUserContext({
      name: getCookie("name"),
      email: getCookie("email"),
    })
  </script>
<script>
  const conn = io(location.origin,{secure: true})
  conn.on("connect_error",function(err){
    Raven.captureException(err)
  })
  const channel = location.pathname.substring(1).replace("/analytics","")
  conn.on("connect",function(){
    console.log("Conne")
  })

  //Db inited, can get data
  conn.on("ready",()=>{
    console.log("ready")
    conn.emit("homeworkSubjectData",{channel},(err,data)=>{
      if(err) throw err
      console.log(renderHomeworkSubjectChart(data))
    })
  })

  function renderHomeworkSubjectChart(data){
    const canvas = document.getElementById("homework-subject-chart")
    const chart = new Chart(canvas,{
      type:"pie",
      data:{
        labels:Object.keys(data),
        datasets:[{
          data:Object.values(data),
          backgroundColor:Object.keys(data).map(toColor)
        }]
      },
      options:{
        legend:{
          position:"right"
        }
      }
    })
    return chart
  }
</script>
<script>
  const mainView = Framework7App.views.create('.view-main')
</script>
<link rel="stylesheet" href="/framework7/css/framework7.min.css"> 
</body>
</html>
